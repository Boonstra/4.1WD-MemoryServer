memoryScript=function(){var t={};return t.init=function(){$$(document).addEvent("click:relay(.new-game-button)",function(e){e.preventDefault(),t.startNewGame()}),t.startNewGame(),t.listenOnSocket()},t.startNewGame=function(){t.currentGame=new t.Game(4,4)},t.listenOnSocket=function(){var e=io.connect("http://localhost:3000");e.on("highScores",function(e){t.updateHighScoresList(e)})},t.updateHighScoresList=function(t){var e,n,o,a=$$(".high-scores-list");for(a.set("html",""),e=new Element("tr"),e.adopt(new Element("th",{text:"#"})),e.adopt(new Element("th",{text:"Name"})),e.adopt(new Element("th",{text:"Score"})),e.adopt(new Element("th",{text:"Time"})),a.adopt(e),o=0;o<t.length;o++)n=t[o],e=new Element("tr"),e.adopt(new Element("td",{text:o+1})),e.adopt(new Element("td",{text:n.name})),e.adopt(new Element("td",{text:n.score})),e.adopt(new Element("td",{text:n.time})),a.adopt(e)},window.addEvent("domready",function(){t.init()}),t}();
!function(){var e=memoryScript;e.Game=function(r,t){this.cellCountX=r,this.cellCountY=t,this.players=[],this.currentPlayerIndex=0,this.turnedCardElements=[],this.turnTimer=null,this.loadingBarAnimation=null,this.startTime=Math.round((new Date).getTime()/1e3),this.$board=$$(".board"),this.$turnTimeSlider=$$(".turn-time-slider"),this.$turnTimeSliderValue=$$(".turn-time-slider-value"),this.$currentPlayerNameField=$$(".current-player-name"),this.$playerScores=$$(".player-scores"),this.$loadingBarBackground=$$(".loading-bar-background"),this.$loadingBarProgress=$$(".loading-bar-progress"),this.$endOfGameScreen=$$(".end-of-game-screen"),this.$playerScores.set("text",""),this.players.push(new e.Player("Player 1")),this.players.push(new e.Player("Player 2")),this.currentPlayerIndex=Math.floor(Math.random()*this.players.length),this.resetEndOfGame(),this.nextTurn(!0),this.prepareBoard(this.cellCountX,this.cellCountY),this.$turnTimeSlider.addEvent("change",function(){this.handleTurnTimeSliderChange()}.bind(this)),this.$board.addEvent("click:relay(.card-container)",function(e,r){this.handleCardClick(r)}.bind(this))}}();
!function(){var a=memoryScript;a.Game.prototype.prepareBoard=function(a,t){var e,r,o,l,n,d,c,s,i,h,p;for(c=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],h=[];h.length<a*t;)i=Math.floor(Math.random()*c.length),s=c[i],h.push(s,s),c.splice(i,1);for(this.$board.set("html",""),d=0;t>d;d++){for(n=0;a>n;n++)p=Math.floor(Math.random()*h.length),e=new Element("div",{"class":"card-container"}),r=new Element("div",{"class":"card-flipper"}),o=new Element("div",{"class":"card-front",html:"*"}),l=new Element("div",{"class":"card-back",html:h[p]}),h.splice(p,1),r.adopt(o,l),e.adopt(r),this.$board.adopt(e);this.$board.adopt(new Element("div",{"class":"clear"}))}}}();
!function(){var t=memoryScript;t.Game.prototype.handleTurnTimeSliderChange=function(){this.$turnTimeSliderValue.set("text",Math.round(this.getTurnTime()/100)/10)},t.Game.prototype.handleCardClick=function(t){var e=$$(t);if(!(this.turnedCardElements.length>=2||e[0].hasClass("flipped"))&&(null==this.turnTimer&&this.startTurnTimer(),e.addClass("flipped"),this.turnedCardElements.push(e),this.turnedCardElements.length>=2&&this.turnedCardElements[0].getElement(".card-back")[0].get("text")==this.turnedCardElements[1].getElement(".card-back")[0].get("text"))){if(this.turnedCardElements=[],this.players[this.currentPlayerIndex].incrementScore(),null!=this.loadingBarAnimation&&this.loadingBarAnimation.cancel(),this.isEndOfGame())return this.endOfGame(),void 0;this.nextTurn(!1)}},t.Game.prototype.startTurnTimer=function(){this.resetTurnTimer(),this.loadingBarAnimation=new Fx.Tween(this.$loadingBarProgress[0],{duration:this.getTurnTime(),transition:"linear",property:"width",onComplete:function(){this.$loadingBarProgress.setStyle("width",0)}.bind(this),onCancel:function(){this.$loadingBarProgress.setStyle("width",0)}.bind(this)}).start(0,this.$loadingBarBackground.getSize()[0].x+2),this.turnTimer=setTimeout(function(){this.nextTurn(!0)}.bind(this),this.getTurnTime())},t.Game.prototype.resetTurnTimer=function(){null!=this.loadingBarAnimation&&this.loadingBarAnimation.cancel(),clearTimeout(this.turnTimer),this.turnTimer=null},t.Game.prototype.nextTurn=function(t){var e=this.currentPlayerIndex,n=0;for(t&&(e+=1,e>=this.players.length&&(e=0),this.$currentPlayerNameField.set("text",this.players[e].name),this.currentPlayerIndex=e),n;n<this.turnedCardElements.length;n++)this.turnedCardElements[n].removeClass("flipped");this.turnedCardElements=[],this.resetTurnTimer()},t.Game.prototype.getTurnTime=function(){var t=parseInt(this.$turnTimeSlider[0].get("value"));return isNaN(t)?5e3:t}}();
!function(){var e=memoryScript;e.Game.prototype.isEndOfGame=function(){return this.$board.getElements(".card-container.flipped")[0].length>=this.cellCountX*this.cellCountY},e.Game.prototype.endOfGame=function(){var e,t=this.$endOfGameScreen.getElement(".end-of-game-screen-content"),n=this.$endOfGameScreen.getElement(".winner-player-name"),r=this.$endOfGameScreen.getElement(".total-play-time-container"),i=r.getElement(".total-play-time"),a=this.$endOfGameScreen.getElement(".total-score-container"),s=a.getElement(".total-score"),o=-1,h=[],l="";for(e=0;e<this.players.length;e++)this.players[e].score>o?(h=[this.players[e]],o=this.players[e].score):this.players[e].score==o&&h.push(this.players[e]);for(e=0;e<h.length;e++){l+=h[e].name;{if(!(e<h.length-1))break;l+=" and "}}n.set("text",l),i.set("text",Math.round(100*((new Date).getTime()/1e3-this.startTime))/100),s.set("text",o),this.$endOfGameScreen.setStyle("width",this.$board.getSize()[0].x),this.$endOfGameScreen.setStyle("height",this.$board.getSize()[0].y),this.$endOfGameScreen.setStyle("top",-this.$board.getSize()[0].y),t.setStyle("margin-top",(this.$board.getSize()[0].y-t.getSize()[0].y)/2),new Fx.Tween(this.$endOfGameScreen[0],{duration:2e3,transition:"bounce:out",property:"top"}).start(-this.$board.getSize()[0].y,0)},e.Game.prototype.resetEndOfGame=function(){this.$endOfGameScreen.setStyle("height",0)}}();
!function(){var e=memoryScript;e.Player=function(e){this.name=e,this.score=0,this.$playerScores=$$(".player-scores"),this.$playerScoreRow=new Element("div",{html:"<strong>"+this.name+'</strong>: <span class="score">0</span> points'}),this.$playerScoreField=this.$playerScoreRow.getElement(".score"),this.$playerScores.adopt(this.$playerScoreRow)},e.Player.prototype.incrementScore=function(){this.setScore(this.score+1)},e.Player.prototype.setScore=function(e){this.score=e,this.$playerScoreField.set("text",e)}}();